// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projet_pfa.Models;

#nullable disable

namespace Projet_pfa.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20240421213432_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Projet_pfa.Models.Commentaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("PublicationId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PublicationId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Commentaire");
                });

            modelBuilder.Entity("Projet_pfa.Models.Equipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Drapeau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupeId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupeId");

                    b.ToTable("Equipe");
                });

            modelBuilder.Entity("Projet_pfa.Models.Groupe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Nom")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Groupe");
                });

            modelBuilder.Entity("Projet_pfa.Models.Joueur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DateNaissance")
                        .HasColumnType("int");

                    b.Property<int>("EquipeId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroMaillot")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipeId");

                    b.ToTable("Joueur");
                });

            modelBuilder.Entity("Projet_pfa.Models.Like", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("PublicationId")
                        .HasColumnType("int");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PublicationId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Like");
                });

            modelBuilder.Entity("Projet_pfa.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Equipe1Id")
                        .HasColumnType("int");

                    b.Property<int>("Equipe2Id")
                        .HasColumnType("int");

                    b.Property<double>("PrixSiegeCat1")
                        .HasColumnType("float");

                    b.Property<double>("PrixSiegeCat2")
                        .HasColumnType("float");

                    b.Property<double>("PrixSiegeCat3")
                        .HasColumnType("float");

                    b.Property<string>("Resultat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StadeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("nbrsiegeReserveCat1")
                        .HasColumnType("int");

                    b.Property<int>("nbrsiegeReserveCat2")
                        .HasColumnType("int");

                    b.Property<int>("nbrsiegeReserveCat3")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Equipe1Id");

                    b.HasIndex("Equipe2Id");

                    b.HasIndex("StadeId");

                    b.ToTable("Match");
                });

            modelBuilder.Entity("Projet_pfa.Models.Nationalite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Nationalite");
                });

            modelBuilder.Entity("Projet_pfa.Models.Paiement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Paiement");
                });

            modelBuilder.Entity("Projet_pfa.Models.Publication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Texte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.Property<int>("UtilisateurtId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Publication");
                });

            modelBuilder.Entity("Projet_pfa.Models.Stade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VilleId")
                        .HasColumnType("int");

                    b.Property<int>("nbSiegeCat1")
                        .HasColumnType("int");

                    b.Property<int>("nbSiegeCat2")
                        .HasColumnType("int");

                    b.Property<int>("nbSiegeCat3")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VilleId");

                    b.ToTable("Stade");
                });

            modelBuilder.Entity("Projet_pfa.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateAchat")
                        .HasColumnType("datetime2");

                    b.Property<int>("MatchId")
                        .HasColumnType("int");

                    b.Property<string>("NomBeneficiaire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaiementId")
                        .HasColumnType("int");

                    b.Property<string>("PrenomBeneficiaire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("PaiementId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("Projet_pfa.Models.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NationaliteId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NationaliteId");

                    b.ToTable("Utilisateur");
                });

            modelBuilder.Entity("Projet_pfa.Models.Ville", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ville");
                });

            modelBuilder.Entity("Projet_pfa.Models.Commentaire", b =>
                {
                    b.HasOne("Projet_pfa.Models.Publication", "Publication")
                        .WithMany("Commentaires")
                        .HasForeignKey("PublicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projet_pfa.Models.Utilisateur", "Utilisateur")
                        .WithMany("Commentaires")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publication");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("Projet_pfa.Models.Equipe", b =>
                {
                    b.HasOne("Projet_pfa.Models.Groupe", "Groupe")
                        .WithMany("Equipes")
                        .HasForeignKey("GroupeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Groupe");
                });

            modelBuilder.Entity("Projet_pfa.Models.Joueur", b =>
                {
                    b.HasOne("Projet_pfa.Models.Equipe", "Equipe")
                        .WithMany("Joueurs")
                        .HasForeignKey("EquipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipe");
                });

            modelBuilder.Entity("Projet_pfa.Models.Like", b =>
                {
                    b.HasOne("Projet_pfa.Models.Publication", null)
                        .WithMany("Likes")
                        .HasForeignKey("PublicationId");

                    b.HasOne("Projet_pfa.Models.Utilisateur", "Utilisateur")
                        .WithMany("Likes")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("Projet_pfa.Models.Match", b =>
                {
                    b.HasOne("Projet_pfa.Models.Equipe", "Equipe1")
                        .WithMany("MatchesEquipe1")
                        .HasForeignKey("Equipe1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projet_pfa.Models.Equipe", "Equipe2")
                        .WithMany("MatchesEquipe2")
                        .HasForeignKey("Equipe2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projet_pfa.Models.Stade", "Stade")
                        .WithMany("Matches")
                        .HasForeignKey("StadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipe1");

                    b.Navigation("Equipe2");

                    b.Navigation("Stade");
                });

            modelBuilder.Entity("Projet_pfa.Models.Publication", b =>
                {
                    b.HasOne("Projet_pfa.Models.Utilisateur", "Utilisateur")
                        .WithMany("publications")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("Projet_pfa.Models.Stade", b =>
                {
                    b.HasOne("Projet_pfa.Models.Ville", "Ville")
                        .WithMany("Stades")
                        .HasForeignKey("VilleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ville");
                });

            modelBuilder.Entity("Projet_pfa.Models.Ticket", b =>
                {
                    b.HasOne("Projet_pfa.Models.Match", "Match")
                        .WithMany("Tickets")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projet_pfa.Models.Paiement", "Paiement")
                        .WithMany("Tickets")
                        .HasForeignKey("PaiementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projet_pfa.Models.Utilisateur", "Utilisateur")
                        .WithMany("Tickets")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Paiement");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("Projet_pfa.Models.Utilisateur", b =>
                {
                    b.HasOne("Projet_pfa.Models.Nationalite", "Nationalite")
                        .WithMany("Utilisateurs")
                        .HasForeignKey("NationaliteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nationalite");
                });

            modelBuilder.Entity("Projet_pfa.Models.Equipe", b =>
                {
                    b.Navigation("Joueurs");

                    b.Navigation("MatchesEquipe1");

                    b.Navigation("MatchesEquipe2");
                });

            modelBuilder.Entity("Projet_pfa.Models.Groupe", b =>
                {
                    b.Navigation("Equipes");
                });

            modelBuilder.Entity("Projet_pfa.Models.Match", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Projet_pfa.Models.Nationalite", b =>
                {
                    b.Navigation("Utilisateurs");
                });

            modelBuilder.Entity("Projet_pfa.Models.Paiement", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Projet_pfa.Models.Publication", b =>
                {
                    b.Navigation("Commentaires");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Projet_pfa.Models.Stade", b =>
                {
                    b.Navigation("Matches");
                });

            modelBuilder.Entity("Projet_pfa.Models.Utilisateur", b =>
                {
                    b.Navigation("Commentaires");

                    b.Navigation("Likes");

                    b.Navigation("Tickets");

                    b.Navigation("publications");
                });

            modelBuilder.Entity("Projet_pfa.Models.Ville", b =>
                {
                    b.Navigation("Stades");
                });
#pragma warning restore 612, 618
        }
    }
}
